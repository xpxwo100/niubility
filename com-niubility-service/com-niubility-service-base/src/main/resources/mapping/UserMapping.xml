<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="combookservice.service.mapper.UserMapper">
    <cache eviction="FIFO" readOnly="true" flushInterval="30000" size="1024"/>

    <!-- (1) LRU,最近最少使用的，一处最长时间不用的对象
     (2) FIFO,先进先出，按对象进入缓存的顺序来移除他们
     (3) SOFT,软引用，移除基于垃圾回收器状态和软引用规则的对象
     (4) WEAK,弱引用，更积极的移除基于垃圾收集器状态和弱引用规则的对象。这里采用的是LRU，
     移除最长时间不用的对形象

     flushInterval:刷新间隔时间，单位为毫秒，这里配置的是100秒刷新，如果你不配置它，那么当
     SQL被执行的时候才会去刷新缓存。

     size:引用数目，一个正整数，代表缓存最多可以存储多少个对象，不宜设置过大。设置过大会导致内存溢出。
     这里配置的是1024个对象

     readOnly:只读，意味着缓存数据只能读取而不能修改，这样设置的好处是我们可以快速读取缓存，缺点是我们没有
     办法修改缓存，他的默认值是false，不允许我们修改-->
    <!--
    二级缓存.三方缓存方式 <cache type="org.mybatis.caches.memcached.MemcachedCache"/>
    -->
    <resultMap id="result" type="hashmap">
    </resultMap>

    <select id="selectMapList" parameterType="hashmap" resultType="hashmap" flushCache="true" useCache="false">
        ${sql}

    </select>
    <update id="s">

    </update>
    <insert id="insetLog" parameterType="String">
        INSERT INTO syslog (content)
        VALUES (#{s,jdbcType=VARCHAR});
        ON duplicate KEY
        UPDATE id = id
    </insert>
    <select id="selectForwardOnly"
            parameterType="hashmap" resultMap="result"
            resultSetType="FORWARD_ONLY" fetchSize="-2147483648">
        SELECT *
        FROM test
    </select>
</mapper>